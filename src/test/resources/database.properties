devDBURL=jdbc:sqlserver://phgsql01.database.windows.net:1433;DatabaseName=db_rebate
devUser=qaautomation@phgsql01
devPassword=iopaXrR7xKfW983NEzjGHAQ4w66vUVcPVcFPnYqgJhBstbCe

uatDBURL=jdbc:sqlserver://phgsqltest01.database.windows.net:1433;DatabaseName=db_rebate
uatUser=qaautomation@phgsqltest01
uatPassword=iopaXrR7xKfW983NEzjGHAQ4w66vUVcPVcFPnYqgJhBstbCe


#SQLs to be used for API to fetch LOBs for a Contract
SQLtoPickaValidContract=select top 1 *  from [cfg].[MFR_Contract_Detail] where Is_Current_Flag=1
SQLtoPickAnInvalidContract=select top 1 *  from [cfg].[MFR_Contract_Detail] where Is_Current_Flag=1 order by row_key desc
SQLtoPickAContractWithIsCurrentFlag0=select top 1 *  from [cfg].[MFR_Contract_Detail] where Is_Current_Flag=0

#dbURL=jdbc:sqlserver://phgsqltest01.database.windows.net:1433;DatabaseName=db_rebate
#user=qaautomation@phgsqltest01
#password=iopaXrR7xKfW983NEzjGHAQ4w66vUVcPVcFPnYqgJhBstbCe


# SQLs to be used for retrieving the values from Database
getCountOfMFRName=select count(*) as count from [mstr].[Manufacturer] where is_current_flag=1
getAllActiveMFRID=select manufacturer_id from [mstr].[Manufacturer] where is_current_flag=1 order by manufacturer_id asc
getAllActiveMFRName=select name from [mstr].[Manufacturer] where is_current_flag=1 order by name asc


#SQLs to be used for retriving ContractDetails from Datbase
getMFRRowKey=select top 1 Row_key  from[cfg].[MFR_Contract_Detail] where Is_Current_Flag=1
getContractID=select top 1 Contract_ID from [cfg].[MFR_Contract_Detail] where Row_key=?
getManufacturerID=select top 1 Manufacturer_ID from [cfg].[MFR_Contract_Header] where contract_ID=?
getManufacturerDetails=select top 1(Select top 1 JSON_QUERY((select Manufacturer_ID manufacturerId ,Name name,Industry_Relations_Manager industryRelationsManager from [mstr].[Manufacturer] where Manufacturer_ID=? for JSON Path,WITHOUT_ARRAY_WRAPPER)) as manufacturer from [mstr].[Manufacturer] for JSON PATH,WITHOUT_ARRAY_WRAPPER) as ManufacturerDetails from [mstr].[Manufacturer]
getContractHeaderDetails=select top 1(select top 1 JSON_QUERY((select Row_Key rowKey,Lifecycle_Status lifecycleStatus,Start_Date startDate,End_date endDate, replace(convert (varchar, Rec_Created_Date,121),' ','T') recCreatedDate,Rec_Created_BY recCreatedBy,replace(convert (varchar, rec_updated_date,121),' ','T') recUpdatedDate,Rec_Updated_BY recUpdatedBy,Contract_ID contractId,Manufacturer_ID manufacturerId,Contract_Type contractType,Contract_Name contractName,Contract_Doc_Reference contractDocReference,Notes notes  from[cfg].[MFR_Contract_Header] where contract_ID=? for JSON path,WITHOUT_ARRAY_WRAPPER,INCLUDE_NULL_VALUES ))as contractHeader from [cfg].[MFR_Contract_Header] for JSON path,WITHOUT_ARRAY_WRAPPER)as Contract_Header_Details from [cfg].[MFR_Contract_Header]
getContractDetailsJSON=select Contract_Detail_Json from [cfg].[MFR_Contract_Detail] where contract_ID=?
getContractDetailsCount=select count(*) Count_Of_ContractDetails from [cfg].[MFR_Contract_Detail]
getContractDetailsRowKeySql=select top 1 Row_key from[cfg].[MFR_Contract_Detail] where Is_Current_Flag=1


# getSelectOption SQLs to be used for retrieving the values from Database
getCodeTypeOfDisputeDays=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='DisputeDays' order by code_value asc
getCodeDictionaryOfDisputeDays=select code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='DisputeDays' order by code_Description asc
getCodeTypeOfBillingCycle=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='BillingCycle' order by code_value asc
getCodeDictionaryOfBillingCycle=select code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='BillingCycle' order by code_Description asc
getCodeTypeOfReSubmissionWindow=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='ReSubmissionWindow' order by code_value asc
getCodeDictionaryOfReSubmissionWindow=select code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='ReSubmissionWindow' order by code_Description asc
getCodeTypeOfUmRule=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='UmRule' order by code_value asc
getCodeDictionaryOfUmRule=select code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='UmRule' order by code_Description asc
getCodeTypeOfPricingMethod=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='PricingMethod' order by code_value asc
getCodeDictionaryOfPricingMethod=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='PricingMethod' order by code_Description asc
getCodeTypeOfPaymentTerms=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='PaymentTerms' order by code_value asc
getCodeDictionaryOfPaymentTerms=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='PaymentTerms' order by code_Description asc
getCodeTypeOfRebateableDrugTier=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='RebateableDrugTier' order by code_value asc
getCodeDictionaryOfRebateableDrugTier=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='RebateableDrugTier' order by code_Description asc
getCodeTypeOfCompFrmlPosition=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='CompFrmlPosition' order by code_value asc
getCodeDictionaryOfCompFrmlPosition=select code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='CompFrmlPosition' order by code_Description asc
getCodeTypeOfFrmlPosition=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='FrmlPosition' order by code_value asc
getCodeDictionaryOfFrmlPosition=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='FrmlPosition' order by code_Description asc
getCodeTypeOfSubmissionWindow=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='SubmissionWindow' order by code_value asc
getCodeDictionaryOfSubmissionWindow=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='SubmissionWindow' order by code_Description asc
getCodeTypeOfProdOrMfr=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='ProdOrMfr' order by code_value asc
getCodeDictionaryOfProdOrMfr=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='ProdOrMfr' order by code_Description asc
getCodeTypeOfDrugGroupType=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='DrugGroupType' order by code_value asc
getCodeDictionaryOfDrugGroupType=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='DrugGroupType' order by code_Description asc
getCodeTypeOfRebateOptionBillingCycle=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='RebateOptionBillingCycle' order by code_value asc
getCodeDictionaryOfRebateOptionBillingCycle=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='RebateOptionBillingCycle' order by code_Description asc
getCodeTypeOfLateFee=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='LateFee' order by code_value asc
getCodeDictionaryOfLateFee=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='LateFee' order by code_Description asc
getCodeTypeOfAuditFrequency=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='AuditFrequency' order by code_value asc
getCodeDictionaryOfAuditFrequency=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='AuditFrequency' order by code_Description asc
getCodeTypeOfAuditLookback=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='AuditLookback' order by code_value asc
getCodeDictionaryOfAuditLookback=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='AuditLookback' order by code_Description asc
getCodeTypeOfPricingBasis=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='PricingBasis' order by code_value asc
getCodeDictionaryOfPricingBasis=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='PricingBasis' order by code_Description asc
getCodeTypeOfPricingRefDate=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='PricingRefDate' order by code_value asc
getCodeDictionaryOfPricingRefDate=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='PricingRefDate' order by code_Description asc
getCodeTypeOfCompRestrictions=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='CompRestrictions' order by code_value asc
getCodeDictionaryOfCompRestrictions=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='CompRestrictions' order by code_Description asc
getCodeTypeOfCompDrugTier=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='CompDrugTier' order by code_value asc
getCodeDictionaryOfCompDrugTier=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='CompDrugTier' order by code_Description asc
getCodeTypeOfDrugSource=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='DrugSource' order by code_value asc
getCodeDictionaryOfDrugSource=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='DrugSource' order by code_Description asc
getCodeTypeOfDrugSearchCriteria=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='DrugSearchCriteria' order by code_value asc
getCodeDictionaryOfDrugSearchCriteria=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='DrugSearchCriteria' order by code_Description asc
getCodeTypeOfLobNonPartD=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='LobNonPartD' order by code_value asc
getCodeDictionaryOfLobNonPartD=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='LobNonPartD' order by code_Description asc
getCodeTypeOfLocations=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='Locations' order by code_value asc
getCodeDictionaryOfLocations=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='Locations' order by code_Description asc
getCodeTypeOfLobPartD=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='LobPartD' order by code_value asc
getCodeDictionaryOfLobPartD=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='LobPartD' order by code_Description asc
getCodeTypeOfFormularyType=select code_value from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='FormularyType' order by code_value asc
getCodeDictionaryOfFormularyType=select  code_Description from [ref].[Code_Dictionary] where is_current_flag=1 and code_type='FormularyType' order by code_Description asc

# PostInitiateNewManufactureContract SQLs to be used delete the record from the Database
deleteContractHeaderByContractName=DELETE FROM [cfg].[MFR_Contract_Header] where Contract_Name LIKE ?
deleteContractDetailByAmendmentName=DELETE FROM [cfg].[MFR_Contract_Detail] where Amendment_Name LIKE ?

getContractIdByContractName=select Contract_ID from [cfg].[MFR_Contract_Header] where Contract_Name=?
getRowKeyByContractName=select Row_Key from [cfg].[MFR_Contract_Header] where Contract_Name=?
getRowKeyByAmendmentName=select Row_Key from [cfg].[MFR_Contract_Detail] where Amendment_Name=?
getLCSByContractName=select ch.lifecycle_status as headerLCS, cd.lifecycle_status as detailLCS from [cfg].[MFR_Contract_Header] CH, [cfg].[MFR_Contract_Detail] CD where ch.contract_id=cd.contract_id and ch.contract_name=?



# Discard a contract
getContractIDAndRowKey=select top 1 ch.contract_id,ch.row_key,ch.is_current_flag as ContractHeaderIsCurrentFlag,cd.is_current_flag as ContractDetailsIsCurrentFlag from [cfg].[MFR_Contract_Header]ch join [cfg].[MFR_Contract_Detail] cd on ch.contract_id=cd.contract_id where ch.Is_Current_Flag=1 and cd.Is_Current_Flag=1
#verifyIsCurrentFlag=select ch.is_current_flag as ContractHeaderIsCurrentFlag,cd.is_current_flag as ContractDetailsIsCurrentFlag from [cfg].[MFR_Contract_Header]ch join [cfg].[MFR_Contract_Detail] cd on ch.contract_id=cd.contract_id where ch.row_Key=?
updateContractHeader=update [cfg].[MFR_Contract_Header] set IS_Current_Flag=1 where Row_key=?
updateContractDetail=update    [cfg].[MFR_Contract_Detail] set IS_Current_Flag=1 where Row_key=?
verifyContractHeader=select count(*) as count from [cfg].[MFR_Contract_Header] where is_current_flag=0 and contract_id=?
verifyContractDetail=select count(*) as count from [cfg].[MFR_Contract_Detail] where is_current_flag=0 and contract_id =?
verifyDiscardContractHeader=select Is_Current_Flag from [cfg].[MFR_Contract_Header] where contract_id=?
verifyDiscardContractDetails=select Is_Current_Flag from [cfg].[MFR_Contract_Detail] where contract_id=?

#SQLs to be used for API to fetch benefitRules for a Contract by a contract ID
SQLtoPickaValidContractIDfromBenefitRulestable=select top 1 benefit_rule_id, benefit_rule_name, br.Contract_id, ch.contract_id from [cfg].[MFR_Contract_Benefit_Rule] BR, [cfg].[MFR_Contract_Header] CH where BR.contract_id=ch.contract_id  and br.is_current_flag=1  and ch.is_current_flag=1 and BR.lifecycle_status='Approved'
SQLtoGetBenefitRuleDetailsOfaContractAsJson=select top 1(select  benefit_rule_id benefitRuleId, benefit_rule_name benefitRuleName from [cfg].[MFR_Contract_Benefit_Rule] where contract_id=? and Lifecycle_status='Approved' for Json path) as benefit_rule_Json from [cfg].[MFR_Contract_Benefit_Rule]


#SQLs to be used for API to fetchProgramsToProgramGrid
getContractIDOfProgram=Select top 1 pgrm.Contract_ID from [cfg].[MFR_Program] pgrm join [cfg].[MFR_Contract_Detail]cd on pgrm.Contract_ID = cd.Contract_ID join [cfg].[MFR_Contract_Header]ch on cd.Contract_ID= ch.Contract_ID where cd.Is_Current_Flag=1 and ch.Is_Current_Flag=1 and pgrm.Is_Current_Flag=1 and Program_Detail_Json<>'Null' order by cd.Rec_Created_Date desc

getProgramDetailsToProgamGrid=Select * from [cfg].[MFR_Program] where Contract_ID=? and Is_Current_Flag=1
getProgramDetailJSONValues=Select concat('[', STRING_AGG (Program_Detail_Json, ','), ']') Program_Detail_JSON from [cfg].[MFR_Program] where Contract_ID=? and Is_Current_Flag=1
getDrugGroupJSONfromDbForProgramIntialSplit=Select top 1 (Select distinct MFR_Druglist_ID mfrDlId,List_Name listName,List_Type listType From [cfg].[MFR_DrugList] where MFR_Druglist_ID In (
getDrugGroupJSONfromDbForProgramFinalSplit=) for json path) as drugsList from [cfg].[MFR_DrugList]
getContractIDOfProgramHavingCompletedAndInProgressProgramms=Select top 1 cd.Contract_ID from [cfg].[MFR_Program] pgrm join [cfg].[MFR_Contract_Detail]cd on pgrm.Contract_ID = cd.Contract_ID join [cfg].[MFR_Contract_Header]ch on cd.Contract_ID= ch.Contract_ID where cd.Is_Current_Flag=1 and ch.Is_Current_Flag=1 and pgrm.Is_Current_Flag=1 and Program_Detail_Json<>'Null' and pgrm.LifeCycle_Status in ('InProgress','Completed') order by cd.Rec_Created_Date desc
gteContractIDWithIsCurrentFlagZero=Select top 1 cd.Contract_ID from [cfg].[MFR_Program] pgrm join [cfg].[MFR_Contract_Detail]cd on pgrm.Contract_ID = cd.Contract_ID join [cfg].[MFR_Contract_Header]ch on cd.Contract_ID= ch.Contract_ID where cd.Is_Current_Flag=0 and ch.Is_Current_Flag=0 and pgrm.Is_Current_Flag=0 and Program_Detail_Json<>'Null' order by cd.Rec_Created_Date desc

#SQLs to be used for FindDrugGroup of manufactuere API
getManufactuereName=Select top 1 Name from [mstr].[vw_Manufacturer] mfr join [cfg].[MFR_DrugList] dl on mfr.Manufacturer_ID= dl.Manufacturer_ID where dl.IS_Current_Flag=1 and mfr.Is_Current_Flag=1 order by dl.rec_Created_Date desc
getDrugGroupSummaryFromDB=Select Life_Cycle_Status lifecycleStatus,MFR_DrugList_ID mfrDrugListId,MFR_Name mfrName,List_Name drugGroupName,List_Type drugGroupType,List_Type_Description drugGroupTypeDesc,Mode mode,DrugList_Rule_ID drugListRuleId,Number_Of_Approved_NDC numberOfApprovedNDC,Number_Of_Pending_NDC numberOfPendingNDC from [cfg].[vw_MFR_DrugList_Summary]where MFR_Name=?
#getManufacturerDrugList=Select top 1(select MFR_DrugList_ID mfrDrugListId from [cfg].[vw_MFR_DrugList_Summary]where MFR_Name=? for json path)as mfrDrugListId from [cfg].[vw_MFR_DrugList_Summary]
getNumberofApprovedNDC=Select top 1(select Number_Of_Approved_NDC numberOfApprovedNDC from [cfg].[vw_MFR_DrugList_Summary]where MFR_Name=? for json path)as numberOfApprovedNDC from [cfg].[vw_MFR_DrugList_Summary]
getNumberofPendingNDC=Select top 1(select Number_Of_Pending_NDC numberOfPendingNDC from [cfg].[vw_MFR_DrugList_Summary]where MFR_Name=? for json path)as numberOfPendingNDC from [cfg].[vw_MFR_DrugList_Summary]





#SQLs to be used for API to find all manufacture contract
getCountOfManufactureID=select count(*) as count from [cfg].[MFR_Contract_Header] where is_current_flag=1 and Manufacturer_ID='ASTRA001'
getContractHeaderColumeValueByRowKey=select ? from [cfg].[MFR_Contract_Header] where Row_Key LIKE ?
getContractDetailColumeValueByRowKey=select ? from [cfg].[MFR_Contract_Detail] where Row_Key LIKE ?

# Create Drug SQLs to be used delete the record from the Database
deleteDrugGroupByName=DELETE FROM [cfg].[MFR_DrugList] where List_Name LIKE ?
getDrugListID=select MFR_DrugList_ID from [cfg].[MFR_DrugList] where List_Name Like ?
getDrugListRowKey=select Row_Key from [cfg].[MFR_DrugList] where List_Name Like ?
columnNameDrugList_ID=MFR_DrugList_ID

# GET Drug Group Details SQLs
getMFRDrugListID=select top 1 Row_Key from [cfg].[MFR_DrugList]  where Is_Current_Flag=1

#SQLs for CreateBeneFitRuleForAContractAPI
contractIdForCreateBenefitRuleForContract=Select Contract_ID from [cfg].[MFR_Contract_Header] where Lifecycle_Status='new'
updateContractHeaderLifeCycleStatusToInProgress=update [cfg].[MFR_Contract_Header] set Lifecycle_Status='InProgress' where Contract_ID=?
updateContractDetailLifeCycleStausToInProgress=update [cfg].[MFR_Contract_Detail] set Lifecycle_Status='InProgress' where Contract_ID=?
deleteBenefitRulesCreated=Delete from [cfg].[MFR_Contract_Benefit_Rule] where Contract_ID=?
updateContractHeaderLifeCycleStatusToNew=update [cfg].[MFR_Contract_Header] set Lifecycle_Status='new' where Contract_ID=?
updateContractDetailLifeCycleStausToNew=update [cfg].[MFR_Contract_Detail] set Lifecycle_Status='new' where Contract_ID=?


# GET BenefitRule by ContractID SQLs
getBenefitRuleContractidInprogress=select top 1 BR.Contract_ID from [cfg].[MFR_Contract_Detail] CD, [cfg].[MFR_Contract_Benefit_Rule] BR where CD.Contract_id=BR.Contract_id and BR.lifecycle_status='InProgress' and CD.lifecycle_status='InProgress' and CD.is_current_flag=1 and BR.is_current_flag=1
getBenefitRuleContractidApproved=select top 1 BR.Contract_ID from [cfg].[MFR_Contract_Detail] CD, [cfg].[MFR_Contract_Benefit_Rule] BR where CD.Contract_id=BR.Contract_id and BR.lifecycle_status='Approved' and CD.lifecycle_status='InProgress' and CD.is_current_flag=1 and BR.is_current_flag=1
getBenefitRuleByContractIDOfBenefit_Rule_ID=select Benefit_Rule_ID from [cfg].[MFR_Contract_Benefit_Rule] where Contract_ID='ABV0011465' and Is_Current_Flag=1
getBenefitRuleByContractIDOfBenefit_Rule_Name=select Benefit_Rule_Name from [cfg].[MFR_Contract_Benefit_Rule] where Contract_ID='ABV0011465' and Is_Current_Flag=1
getBenefitRuleByContractIDOfFormulary_Type=select Formulary_Type from [cfg].[MFR_Contract_Benefit_Rule] where Contract_ID='ABV0011465' and Is_Current_Flag=1
getBenefitRuleByContractIDOfAbove_Value=select Above_Value from [cfg].[MFR_Contract_Benefit_Rule] where Contract_ID='ABV0011465' and Is_Current_Flag=1
getBenefitRuleByContractIDOfBelow_Value=select Below_Value from [cfg].[MFR_Contract_Benefit_Rule] where Contract_ID='ABV0011465' and Is_Current_Flag=1

# SQLS to verify job status summary
scheduledJobs=Select count(*) as ScheduledJobCount from [TXN].[VW_PROCESSING_JOB_RUN] where status=0
runningJobs=Select count(*) as RunningJobCount from [TXN].[VW_PROCESSING_JOB_RUN] where status=1
finishedJobs=Select count(*) as FinishedJobCount from [TXN].[VW_PROCESSING_JOB_RUN] where status in('6','3','5')
cancelledJobs=Select count(*) as CancelledJobCount from [TXN].[VW_PROCESSING_JOB_RUN] where status =2
abortedJobs=Select count(*) as AbortedJobCount from [TXN].[VW_PROCESSING_JOB_RUN] where status =4

#SQLs for API to Change Program Status From InProgress to Completed
sqlToPickaProgramWhichdoesnotHaveaRO=select top 1 * from (select Pro.Mfr_Program_id,Pro.row_key, Ro.MFR_Rebate_Option_ID from [cfg].[MFR_Program] Pro left join [cfg].[MFR_Rebate_Option] RO on pro.Mfr_Program_id=RO.Mfr_Program_id where pro.lifecycle_status='InProgress' and pro.is_current_flag='1') as result where result.MFR_Rebate_Option_ID is NULL
sqlToPickaValidProgramHavingAtleastOneCompletedRO=select A.mfr_program_id Rebate_option_program_id, A.lifecycle_status Rebate_option_lifecycle_status ,C.mfr_program_id Manufacturer_program_id, C.lifecycle_status Program_lifecycle_status, C.Row_key from [cfg].[MFR_Rebate_Option] A inner join (select mfr_program_id, count(distinct lifecycle_status) cnt from [cfg].[MFR_Rebate_Option] group by mfr_program_id having count(distinct lifecycle_status)=1) B on A.mfr_program_id=B.mfr_program_id and A.lifecycle_status='Completed' inner join [cfg].[MFR_Program] C on A.mfr_program_id=C.mfr_program_id and C.lifecycle_status='InProgress' group by A.mfr_program_id, A.lifecycle_status, C.mfr_program_id, C.lifecycle_status, c.Row_key
sqlToUpdateProgramStatusFromCompletedToInProgress=update [cfg].[MFR_Program] set lifecycle_status='InProgress' where row_key=?
sqlToPickaProgramHavinganInProgressRO=select top 1 A.mfr_program_id Rebate_option_program_id, A.lifecycle_status Rebate_option_lifecycle_status ,C.mfr_program_id Manufacturer_program_id, C.lifecycle_status Program_lifecycle_status, C.Row_key from [cfg].[MFR_Rebate_Option] A inner join (select mfr_program_id, count(distinct lifecycle_status) cnt from [cfg].[MFR_Rebate_Option] group by mfr_program_id having count(distinct lifecycle_status)=1) B on A.mfr_program_id=B.mfr_program_id and A.lifecycle_status='InProgress' inner join [cfg].[MFR_Program] C on A.mfr_program_id=C.mfr_program_id and C.lifecycle_status='InProgress' group by A.mfr_program_id, A.lifecycle_status, C.mfr_program_id, C.lifecycle_status, c.Row_key
sqlToPickaProgramHavingBothInProgressandCompletedRO=select top 1 A.mfr_program_id Rebate_option_program_id, A.lifecycle_status Rebate_option_lifecycle_status ,C.mfr_program_id Manufacturer_program_id, C.lifecycle_status Program_lifecycle_status, C.Row_key from [cfg].[MFR_Rebate_Option] A inner join (select mfr_program_id, count(distinct lifecycle_status) cnt from [cfg].[MFR_Rebate_Option] group by mfr_program_id having count(distinct lifecycle_status)=2) B on A.mfr_program_id=B.mfr_program_id  inner join [cfg].[MFR_Program] C on A.mfr_program_id=C.mfr_program_id and C.lifecycle_status='InProgress' group by A.mfr_program_id, A.lifecycle_status, C.mfr_program_id, C.lifecycle_status, c.Row_key

# SQLS to Verify Fetch Job List API
fetchJobListAPI=SELECT JRUN.Processing_Job_Run_ID, convert(varchar,JRUN.REC_CREATED_DATE,23) AS JOB_SCHEDULED_DATE, iif(JRUN.REC_CREATED_BY like '%@%',SubString(JRUN.REC_CREATED_BY,0,charindex('@',JRUN.REC_CREATED_BY)),JRUN.REC_CREATED_BY ) AS JOB_SCHEDULED_BY, convert(varchar,JRUN.REC_UPDATED_DATE,23) AS JOB_STATUS_DATE, case	 when STATUS=0 then 'Scheduled' when Status=1 then 'Running' when Status=2 then 'Canceled' when Status=4 then 'Aborted' when Status=3 then 'Finished With Failures' when Status=6 then 'Finished With Warning' when Status=5 then 'Finished' end AS JOB_STATUS,JRUN.PROCESSING_JOB_RUN_ID,PGM.ROW_KEY AS PROGRAM_ROW_KEY, FQH.LIFECYCLE_STATUS AS LIFECYCLE_STATUS,JSON_VALUE(PGM.PROGRAM_DETAIL_JSON, '$.programName') AS PROGRAM_NAME, MFR.NAME AS MANUFACTURER_NAME, (SELECT LOB = STRING_AGG( VALUE ,',') FROM  OPENJSON(JSON_QUERY(CD.CONTRACT_DETAIL_JSON, '$.lineOfBusiness'),'$')) AS LINE_OF_BUSINESS FROM [TXN].[VW_PROCESSING_JOB_RUN] JRUN JOIN [CFG].[VW_MFR_PROGRAM] PGM ON JSON_VALUE(JRUN.CONTEXT, '$.programId') = PGM.ROW_KEY JOIN [TXN].[VW_FORMULARY_QUALIFICATION_HEADER] FQH ON JSON_VALUE(JRUN.CONTEXT, '$.fqHeaderId') = FQH.FORMULARY_QUALIFICATION_HEADER_ID JOIN [CFG].[VW_MFR_CONTRACT_DETAIL] CD ON CD.CONTRACT_ID = PGM.CONTRACT_ID AND ((PGM.START_DATE BETWEEN CD.START_DATE AND CD.END_DATE) AND (PGM.END_DATE BETWEEN CD.START_DATE AND CD.END_DATE)) JOIN [CFG].[VW_MFR_CONTRACT_HEADER] CH ON CH.CONTRACT_ID = CD.CONTRACT_ID AND ((CD.START_DATE BETWEEN CH.START_DATE AND CH.END_DATE) AND (CD.END_DATE BETWEEN CH.START_DATE AND CH.END_DATE)) JOIN [MSTR].[VW_MANUFACTURER] MFR ON CH.MANUFACTURER_ID = MFR.MANUFACTURER_ID AND ((CH.START_DATE BETWEEN MFR.START_DATE AND MFR.END_DATE) AND (CH.END_DATE BETWEEN MFR.START_DATE AND MFR.END_DATE)) ORDER BY JOB_SCHEDULED_DATE;

# CreateNewRebateProgram SQLs
deleteRebateProgram=DELETE FROM [cfg].[MFR_Program] where Contract_ID LIKE ?
getMfrDrugListIdByListType=select top 1 MFR_DrugList_ID from [cfg].[MFR_DrugList] where Manufacturer_ID='ASTRA001' and List_Type= ? and Life_Cycle_Status='Approved' and Is_Current_Flag='1'
updateContractHeaderStatusFromNewToInProgress=update [cfg].[MFR_Contract_Header] set Lifecycle_Status='InProgress' where Contract_Name LIKE ?
updateContractDetailsStatusFromNewToInProgress=update [cfg].[MFR_Contract_Detail] set Lifecycle_Status='InProgress' where Amendment_Name LIKE ?
getprogramId=Select MFR_Program_ID from [cfg].[MFR_Program] where Contract_ID= ?
getprogramRowKey=Select Row_key from [cfg].[MFR_Program] where Contract_ID= ?

# CreateNewRebateOptions SQLs
updateContractBenefitRuleToApproveStatus=update [cfg].[MFR_Contract_Benefit_Rule] set Lifecycle_Status='Approved' where Benefit_Rule_Name LIKE ?
deleteBenefitRule=DELETE FROM [cfg].[MFR_Contract_Benefit_Rule] where Benefit_Rule_Name LIKE ?
getMFR_Program_IDByContractID=select MFR_Program_ID from [cfg].[MFR_Program] where Contract_id = ? and Is_Current_Flag='1'
getBenefitRule=select Benefit_Rule_ID from [cfg].[MFR_Contract_Benefit_Rule] where Benefit_Rule_Name Like ?
getBenefitRuleName=select Benefit_Rule_Name from [cfg].[MFR_Contract_Benefit_Rule] where Benefit_Rule_Name Like ?
getRebateOptionIDFromDB=select MFR_Rebate_Option_ID from [cfg].[MFR_Rebate_Option] where MFR_Rebate_Option_Name Like ?
deleteRebateOption=DELETE FROM [cfg].[MFR_Rebate_Option] where MFR_Rebate_Option_Name Like ?

# FindDrugProductDetailsByDrugListIsAndBrandName SQLs
getDrugListIsAndBrandName=select top 1 * from [cfg].[MFR_DrugList_Detail] DD inner join [ref].[Drug_Product] DP  ON DD.Drug_Product_Code=DP.DRUG_PRODUCT_CODE and DP.Is_Current_Flag=1 and DD.Is_Current_Flag=1

# SaveDrugGroupDetails SQLs
getListOfNdcs=select top 3 DRUG_PRODUCT_CODE from [ref].[VW_Drug_Product]  where drug_product_code_type='NDC' and drug_language_code='MEDISPAN' and Is_Current_Flag=1
getListOfExistingNdcs=select top 1 DRUG_PRODUCT_CODE from [ref].[VW_Drug_Product]  where drug_product_code_type='NDC' and drug_language_code='MEDISPAN' and Is_Current_Flag=1
getMFR_DrugList_ID=select MFR_DrugList_ID from [cfg].[MFR_DrugList] where List_Name Like ? and Is_Current_Flag=1
getDrugGroupRowKey=select Row_Key from [cfg].[MFR_DrugList] where List_Name Like ? and Is_Current_Flag=1
#FetchDrugGroup Summary API SQLs
drugGroupSummaryRowkey= Select top 1 row_key from [cfg].[MFR_DrugList] where Is_Current_Flag=1 order by Rec_Created_Date desc
drugGroupSummaryDetails=Select top 1(SELECT DLS1.ROW_KEY rowKey , DLS1.LIFE_CYCLE_STATUS lifecycleStatus, DLS1.MFR_DRUGLIST_ID mfrDrugListId, DLS1.MFR_NAME mfrName, DLS1.LIST_NAME drugGroupName, DLS1.LIST_TYPE drugGroupType, DLS1.LIST_TYPE_DESCRIPTION drugGroupTypeDesc,CASE WHEN DLS1.LIFE_CYCLE_STATUS = 'InProgress' AND DLS2.ROW_KEY IS NOT NULL THEN 'true' ELSE 'false' END previouslyApproved FROM [CFG].[VW_MFR_DRUGLIST_SUMMARY] DLS1 LEFT JOIN [CFG].[VW_MFR_DRUGLIST_SUMMARY] DLS2 ON DLS2.MFR_DRUGLIST_ID = DLS1.MFR_DRUGLIST_ID AND DLS2.LIFE_CYCLE_STATUS = 'Approved' WHERE DLS1.ROW_KEY = ? for json path) as Drug_Group_Details  from [CFG].[VW_MFR_DRUGLIST_SUMMARY] ;

#Term Drug from Drug Group API
fetchDrugListDetail=declare @id varchar (100)=(select top 1 result.MFR_DrugList_ID from (select DLD.MFR_DrugList_ID,count(DLD.MFR_DrugList_ID) as count1 from [cfg].[MFR_DrugList] DL inner join [cfg].[MFR_DrugList_Detail] as DLD on DL.MFR_DrugList_ID=DLD.MFR_DrugList_ID WHERE DL.Is_Current_Flag=1 AND DL.Life_Cycle_Status='InProgress' and DLD.Life_Cycle_Status='Added' and DLD.Is_Current_Flag=1 group by(DLD.MFR_DrugList_ID)) result where result.count1=1) Select top 1 (select  DL.Row_Key ,DL.MFR_DrugList_ID ,DLD.Drug_Product_Code ,DLD.Start_Date ,DLD.End_Date from [cfg].[MFR_DrugList] DL join [cfg].[MFR_DrugList_Detail] as DLD on DL.MFR_DrugList_ID=DLD.MFR_DrugList_ID WHERE DL.Is_Current_Flag=1 AND DL.Life_Cycle_Status='InProgress' and DLD.Life_Cycle_Status='Added' and DLD.Is_Current_Flag=1 and DL.MFR_DrugList_ID=@id order by DL.Rec_Created_Date desc for json path ) result
fetchTwoNDCFromDrugList=declare @id varchar (100)=(select top 1 result.MFR_DrugList_ID from (select DLD.MFR_DrugList_ID,count(DLD.MFR_DrugList_ID) as count1 from [cfg].[MFR_DrugList] DL inner join [cfg].[MFR_DrugList_Detail] as DLD on DL.MFR_DrugList_ID=DLD.MFR_DrugList_ID WHERE DL.Is_Current_Flag=1 AND DL.Life_Cycle_Status='InProgress' and DLD.Life_Cycle_Status='Added' and DLD.Is_Current_Flag=1 group by(DLD.MFR_DrugList_ID)) result where result.count1=2) Select top 1 (select  DL.Row_Key ,DL.MFR_DrugList_ID ,DLD.Drug_Product_Code ,DLD.Start_Date ,DLD.End_Date from [cfg].[MFR_DrugList] DL join [cfg].[MFR_DrugList_Detail] as DLD on DL.MFR_DrugList_ID=DLD.MFR_DrugList_ID WHERE DL.Is_Current_Flag=1 AND DL.Life_Cycle_Status='InProgress' and DLD.Life_Cycle_Status='Added' and DLD.Is_Current_Flag=1 and DL.MFR_DrugList_ID=@id  order by DL.Rec_Created_Date desc for json path ) result
updatingEndDateQuery=Update [cfg].[MFR_DrugList_Detail] set End_Date=
updateLifeCycleStatus=Update [cfg].[MFR_DrugList_Detail] set Life_Cycle_Status='Added' where  Drug_Product_Code=?
lifeCycleStatusCheckQuery=Select Life_Cycle_Status from [cfg].[MFR_DrugList_Detail]	where  Drug_Product_Code=?





getDrugProductCodeSaveDrugGroupDetails=select Drug_Product_Code from [cfg].[MFR_DrugList_Detail] where MFR_DrugList_ID= ? and Is_Current_Flag=1
getRowKeyCodeSaveDrugGroupDetails=select Row_Key from [cfg].[MFR_DrugList_Detail] where MFR_DrugList_ID=465 and Is_Current_Flag=1

# CancelJob SQLs
getPROCESSING_JOB_ID=Select top 1 PROCESSING_JOB_RUN_ID,status from TXN.VW_PROCESSING_JOB_RUN where PROCESSING_JOB_ID=1 and status=?
#Discard drug group API Sql
getNewDrugGroupRowKey=select top 1 row_key from [cfg].[MFR_DrugList] where life_cycle_status='new' and is_current_flag=1
restoreTheDrugGroupStatus=update [cfg].[MFR_DrugList] set is_current_flag=1  where row_key=?
getInProgressDrugGroupRowKey=select top 1 row_key from [cfg].[MFR_DrugList] where life_cycle_status='InProgress' and is_current_flag=1
DiscardedDrugGroupis_current_flag=select is_current_flag from  [cfg].[MFR_DrugList] where row_key=?
getApprovedDrugGroupRowKey=select top 1 row_key from [cfg].[MFR_DrugList] where life_cycle_status='Approved' and is_current_flag=1
getDiscardedDrugGroupRowKey=select top 1 row_key from [cfg].[MFR_DrugList] where life_cycle_status='new' and is_current_flag=0
getInReviewDrugGroupRowKey=select top 1 row_key from [cfg].[MFR_DrugList] where life_cycle_status='InReview' and is_current_flag=1
