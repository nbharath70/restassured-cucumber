Index: src/test/java/baseSteps/DatabaseUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/baseSteps/DatabaseUtils.java b/src/test/java/baseSteps/DatabaseUtils.java
--- a/src/test/java/baseSteps/DatabaseUtils.java	(revision 9cc412506925b81ab1bc8fd757ebab9e7b011b51)
+++ b/src/test/java/baseSteps/DatabaseUtils.java	(revision 87db4ebaa1006dd737ebd044e9c1cf2ba3a966e5)
@@ -35,6 +35,7 @@
     public static String manufacturerID;
     public static List<String> manufactureName;
     static Logger logger = Logger.getLogger(DatabaseUtils.class.getName());
+
     /**
      * This is the  method which loads  the database connection details from database.properties file .
      */
@@ -56,6 +57,7 @@
         }
 
     }
+
     /**
      * This is the  method establishes the connection to database
      */
@@ -72,6 +74,7 @@
 
         }
     }
+
     /**
      * This is the  method retrieves the database details after connection is successful
      */
@@ -90,6 +93,7 @@
 
         }
     }
+
     /**
      * This method retrieves the count of MFR records present in DB
      */
@@ -106,12 +110,14 @@
             ex.printStackTrace();
         }
     }
+
     /**
      * This method returns the no of active MFR details retrieved
      */
     public int getNoOfActiveMFR() {
         return activeMFRCount;
     }
+
     /**
      * This method executes the SQL to get the no of active MFR IDs
      */
@@ -131,12 +137,14 @@
                 ex.printStackTrace();
         }
     }
+
     /**
      * This method returns the no of active MFR details retrieved
      */
     public List<String> getAllMFRID() {
         return ExpectedAllManufacturerID;
     }
+
     /**
      * This method executes the SQL query to get all active MFR names
      */
@@ -156,12 +164,14 @@
             ex.printStackTrace();
         }
     }
+
     /**
      * This method returns the no of active MFR Names retrieved
      */
     public List<String> getAllMFRName(){
         return ExpectedAllManufacturerName;
     }
+
     /**
      * This method retrieves the ContractDetails Row_Key from DB and store in rowkey variable
      * @author Bharath
@@ -181,6 +191,7 @@
             ex.printStackTrace();
         }
     }
+
     /**
      * This method returns the ContractDetails Row_Key from DB
      * @author Bharath
@@ -205,6 +216,12 @@
         }
     }
 
+    /**
+     * This method retrieves the ContractID from ContractDetails Table DB
+     * @author Bharath
+     * @exception  Exception
+     *@param query The sql query which is loaded from database.properties file and executed to get ContactID from DB
+     */
     public String getContractID(){
         return contractID;
     }
@@ -223,10 +240,20 @@
             ex.printStackTrace();
         }
     }
+
+    /**
+     * This method returns the manufacturerID from DB
+     * @author Bharath
+     */
     public String getManufacturerID(){
         return manufacturerID;
     }
 
+    /**
+     * This method retrieves the ManufacturerName from table master manufactuere
+     * @author Bharath
+     * @param query The sql query which is loaded from database.properties file and executed to get Manufacturer name and Manufacturer ID
+     */
     public void executeManufactuerNameQuery(String query){
         try {
             sqlQuery=prop.getProperty(query);
@@ -245,6 +272,11 @@
             ex.printStackTrace();
         }
     }
+
+    /**
+     * This method returns the Manufactuername and manufactuerer ID
+     * @author Bharath
+     */
     public List<String> getManufacturerName(){
         return manufactureName;
     }
Index: src/test/java/baseSteps/GetContractDetailsByID.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/baseSteps/GetContractDetailsByID.java b/src/test/java/baseSteps/GetContractDetailsByID.java
--- a/src/test/java/baseSteps/GetContractDetailsByID.java	(revision 9cc412506925b81ab1bc8fd757ebab9e7b011b51)
+++ b/src/test/java/baseSteps/GetContractDetailsByID.java	(revision 87db4ebaa1006dd737ebd044e9c1cf2ba3a966e5)
@@ -33,6 +33,7 @@
     JsonPath jsonPath;
     static Logger logger = Logger.getLogger(GetAllMFR.class.getName());
     DatabaseUtils dbUtil = new DatabaseUtils();
+
     /**
      * This method retrieves the environment details for GetContractDetailsByID API
      * @author Bharath
@@ -56,6 +57,7 @@
         }
         return baseURI;
     }
+
     /**
      * This method gets the URL from Environment.Property file GetContractDetailsByID API and RowKey from DB and merge together and give complete endpoint
      * @author Bharath
@@ -66,6 +68,7 @@
         url = baseURI + "/" +getAllContractDetailsByID+"/"+rowKeyVal;
         logger.info("=======URL is++++++++++++++++++++++++++ " + url);
     }
+
     /**
      * This method proccesses the request and stores the response
      * @author Bharath
@@ -76,6 +79,7 @@
                 given().log().all().header("Authorization", "Bearer " + token).when().get(url);
         logger.info("Response is:" + response.asString());
     }
+
     /**
      * This method Verifies the request status is 200 or not
      * @author Bharath
@@ -85,6 +89,7 @@
         response.then().assertThat().statusCode(200);
         logger.info("API returns 200 http response code");
     }
+
     /**
      * This method Verifies Response is JSON or NOT
      * @author Bharath
@@ -94,6 +99,10 @@
         logger.info("The response is in proper JSON format");
     }
 
+    /**
+     * This method match the Manufacturer_ID and Name from json and DB
+     * @author Bharath
+     */
     public void matchmanufacturerDetails() {
         actualMFRNameAndID =new ArrayList<String>();
         ExpectedMFRNameAndID=new ArrayList<String>();
Index: src/test/java/stepdefs/DatabaseStepDefinition.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/stepdefs/DatabaseStepDefinition.java b/src/test/java/stepdefs/DatabaseStepDefinition.java
--- a/src/test/java/stepdefs/DatabaseStepDefinition.java	(revision 9cc412506925b81ab1bc8fd757ebab9e7b011b51)
+++ b/src/test/java/stepdefs/DatabaseStepDefinition.java	(revision 87db4ebaa1006dd737ebd044e9c1cf2ba3a966e5)
@@ -49,14 +49,34 @@
         dbUtil.executeGetContractBYIDQuery(query);
     }
 
+    /**
+     * This method defines the glue code for @Given User executes the query to get ManufacturerName and ManufacturerID from DB
+     * step in the getAllMFRContract.feature
+     * @author Bharath
+     * @exception SQLException
+     */
     @Given("^User executes the  '(.*)' to get ManufacturerName and ManufacturerID from DB$")
     public void userExecutesTheToGetManufacturernameAndManufactureridFromDb(String query4) {
     dbUtil.executeManufactuerNameQuery(query4);
     }
+
+    /**
+     * This method defines the glue code for @Given User executes the query to get ContractID from DB
+     * step in the getAllMFRContract.feature
+     * @author Bharath
+     * @exception SQLException
+     */
     @Given("^User executes the  '(.*)' to get ContractID from DB$")
     public void UserExecutesTheToGetContractidFromDb(String query2){
         dbUtil.executeContractDetailQuery(query2);
     }
+
+    /**
+     * This method defines the glue code for @Given User executes the query to get ManufacuterID from DB
+     * step in the getAllMFRContract.feature
+     * @author Bharath
+     * @exception SQLException
+     */
     @Given("^User executes the  '(.*)' to get ManufacuterID from contractHeader table$")
     public void userExecutesTheToGetManufacuteridFromContractheaderTable(String query3) {
         dbUtil.executeContractHeaderQuery(query3);
Index: src/test/java/stepdefs/GetContractDetailsByIDDefinition.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/stepdefs/GetContractDetailsByIDDefinition.java b/src/test/java/stepdefs/GetContractDetailsByIDDefinition.java
--- a/src/test/java/stepdefs/GetContractDetailsByIDDefinition.java	(revision 9cc412506925b81ab1bc8fd757ebab9e7b011b51)
+++ b/src/test/java/stepdefs/GetContractDetailsByIDDefinition.java	(revision 87db4ebaa1006dd737ebd044e9c1cf2ba3a966e5)
@@ -19,7 +19,6 @@
      * step in the getAllMFRContract.feature
      * @author Bharath
      */
-
     @Given("^User hits the ContractDetailsByIDEndpoint with get request$")
     public void UserHitscontractDetailsByID()  {
         contractDetails.hitGetContractDetailsByIDEndpoint();
@@ -30,27 +29,35 @@
      * step in the getAllMFRContract.feature
      * @author Bharath
      */
-
     @When("^API  processes the get request for manufaturer contract details$")
     public void apiProcessesTheRequest()  {
         contractDetails.processGetRequest();
     }
+
     /**
      * This method defines the glue code for @Then which verifies the status code
      * step in the getAllMFRContract.feature
      * @author Bharath
      */
-
-
     @Then("^User gets the correct statusCode from API ContractDetails by ID$")
     public void userGetsTheCorrectStatuscode()  {
         contractDetails.verifyGetRequestStatusCode200();
     }
 
+    /**
+     * This method defines the glue code for @Then which verifies the response in JSON
+     * step in the getAllMFRContract.feature
+     * @author Bharath
+     */
     @Then("^Then User verifies the response is in JSON format$")
     public void userVerifiesTheResponseIsInJsonFormat() {contractDetails.verifyResponseIsInJSONformat();
     }
 
+    /**
+     * This method defines the glue code for @Then which compare the manufacturerID and Name in response with DB
+     * step in the getAllMFRContract.feature
+     * @author Bharath
+     */
     @Then("^User verifies the response details with DB details$")
     public void userVerifiesTheResponseDetailsWithDbDetails() {
         contractDetails.matchmanufacturerDetails();
